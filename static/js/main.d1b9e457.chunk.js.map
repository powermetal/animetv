{"version":3,"sources":["userAPI.js","Redux/userSlice.js","Components/Pagination/Pagination.js","Components/PaginatedContainer/PaginatedContainer.js","Components/ActionButton/ActionButton.js","Components/AnimeCard/AnimeCard.js","images/logo.png","Components/Home/Home.js","animeAPI.js","Components/LazyPaginatedContainer/LazyPaginatedContainer.js","Components/SearchResults/SearchResults.js","Components/PaginatedList/PaginatedList.js","Components/EpisodeList/EpisodeList.js","Components/VideoPlayer/VideoPlayer.js","Components/Button/Button.js","Components/Watch/Watch.js","Components/Searchbar/Searchbar.js","Login/googleOAuth.js","Components/DropDownMenu/DropDownMenu.js","Components/UserContainer/UserContainer.js","Components/Navbar/Navbar.js","Components/Watchlist/Watchlist.js","App.js","reportWebVitals.js","Redux/store.js","index.js"],"names":["userAPI","axios","create","baseURL","fetchUserData","createAsyncThunk","userId","id","get","addWatching","anime","thunkAPI","dispatch","addToWatching","post","postToWatching","getState","user","googleId","addWatchlist","addToWatchlist","postToWatchlist","removeWatchlist","removeFromWatchlist","put","deleteFromWatchlist","defaultState","name","avatar","watching","watchlist","userSlice","createSlice","initialState","reducers","login","state","action","payload","logout","animeId","lastEpisode","find","e","refreshWatchlist","filter","extraReducers","fulfilled","reduce","acc","isSignIn","selectUser","selectWatchlist","selectWatching","actions","Pagination","pageLimit","totalRecords","onPageChanged","totalPages","Math","ceil","useState","currentPage","previousPage","setState","calculateNextState","prevState","newCurrent","useEffect","handlePageChanged","className","onClick","PaginatedContainer","items","getDisplayedContent","slice","displayedContent","setDisplayedContent","handlePageChange","from","to","length","map","item","index","type","color","height","width","ActionButton","icon","text","AnimeCard","title","poster","url","episode","nextEpisodeDate","fn","useDispatch","useSelector","signedIn","animeInfo","renderRemoveButton","src","alt","Home","animes","setAnimes","getWatching","a","response","toCard","nextEpisode","logo","animeAPI","searchAnime","queryParams","params","search","q","page","then","data","console","log","LazyPaginatedContainer","getContent","renderItem","loading","setLoading","onNextPage","onPageChange","onPreviousPage","nextPage","newPage","newItems","timeout","renderButtons","SearchResults","props","pageNum","query","qs","parse","location","ignoreQueryPrefix","searchAnimes","PaginatedList","tabs","getDefaultState","Object","entries","default","flip","setFlip","tab","setTab","reverse","k","i","m","EpisodeList","setAnime","animeList","Array","episodeCount","match","getEpisodes","episodeList","episodes","renderWatchlist","overview","VideoPlayer","selectedVideo","setSelectedVideo","videos","v","option","scrolling","frameBorder","allowFullScreen","controls","Button","btn","greyed","label","Watch","setVideos","previousEpisode","parseInt","style","order","episodesCount","handleVideos","renderVideo","Searchbar","setSearch","onSubmit","preventDefault","onSearch","handleSubmit","onChange","target","value","placeholder","googleOAuth","clientId","cookiePolicy","DropDownMenu","menuRef","active","blur","onBlur","ref","tabIndex","path","React","forwardRef","UserContainer","open","setOpen","createRef","onSuccess","profileObj","givenName","imageUrl","getUserData","onFailure","handleBlur","currentTarget","contains","relatedTarget","signOut","useGoogleLogout","onLogoutSuccess","logoutMenu","current","focus","buttonText","isSignedIn","Sidebar","history","useHistory","searchTerm","push","replace","Watchlist","getUpdatedWatchlist","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.d1b9e457.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst userAPI = axios.create({\r\n    baseURL: 'https://animootv.herokuapp.com'\r\n})\r\n\r\nexport const getUserData = id => {\r\n    return userAPI.get(`/users/${id}`)\r\n}\r\n\r\nexport const postToWatching = (id, anime) => {\r\n    return userAPI.post(`/users/${id}/watching`, anime)\r\n}\r\n\r\nexport const postToWatchlist = (id, anime) => {\r\n    return userAPI.post(`/users/${id}/watchlist`, anime)\r\n}\r\n\r\nexport const getContinueWatchingList = id => {\r\n    return userAPI.get(`/users/${id}/continue`)\r\n}\r\n\r\nexport const getWatchlist = id => {\r\n    return userAPI.get(`/users/${id}/watchlist`)\r\n}\r\n\r\nexport const deleteFromWatchlist = (id, anime) => {\r\n    return userAPI.put(`/users/${id}/watchlist`, anime)\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getUserData, postToWatching, postToWatchlist, deleteFromWatchlist } from '../userAPI';\r\n\r\nexport const fetchUserData = createAsyncThunk(\r\n    'user/userData',\r\n        userId => {\r\n            const response = getUserData(userId)\r\n            return response\r\n        }\r\n  )\r\n\r\nexport const addWatching = createAsyncThunk(\r\n    'user/watching',\r\n        (anime, thunkAPI) => {\r\n            thunkAPI.dispatch(addToWatching(anime))\r\n            postToWatching(thunkAPI.getState().user.googleId, anime)\r\n        }\r\n)\r\n\r\nexport const addWatchlist = createAsyncThunk(\r\n    'user/watchlist',\r\n        (anime, thunkAPI) => {\r\n            thunkAPI.dispatch(addToWatchlist(anime))\r\n            postToWatchlist(thunkAPI.getState().user.googleId, anime)\r\n        }\r\n)\r\n\r\nexport const removeWatchlist = createAsyncThunk(\r\n    'user/removeFromWatchlist',\r\n        (anime, thunkAPI) => {\r\n            thunkAPI.dispatch(removeFromWatchlist(anime))\r\n            deleteFromWatchlist(thunkAPI.getState().user.googleId, anime)\r\n        }\r\n)\r\n\r\nconst defaultState = {\r\n    googleId: '',\r\n    name: '',\r\n    avatar: '',\r\n    watching: {},\r\n    watchlist: []\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: defaultState,\r\n    reducers: {\r\n        login: (state, action) => {\r\n            return {...state, ...action.payload}\r\n        },\r\n        logout: () => {\r\n            return { ...defaultState }\r\n        },\r\n        addToWatching: (state, action) => {\r\n            return {...state, watching: {...state.watching, [action.payload.animeId]: action.payload.lastEpisode}}\r\n        },\r\n        addToWatchlist: (state, action) => {\r\n            if(state.watchlist.find(e => e.animeId === action.payload.animeId))\r\n                return state\r\n            return {...state, watchlist: [...state.watchlist, action.payload]}\r\n        },\r\n        refreshWatchlist: (state, action) => {\r\n            return {...state, watchlist: action.payload}\r\n        },\r\n        removeFromWatchlist: (state, action) => {\r\n            return {...state, watchlist: state.watchlist.filter( e => e.animeId !== action.payload.animeId)}\r\n        }\r\n    },\r\n\r\n    extraReducers: {\r\n        [fetchUserData.fulfilled]: (state, action) => {\r\n            const watching = action.payload.watching.reduce( (acc, e) => {\r\n                acc[e.animeId] = e.lastEpisode\r\n                return acc\r\n            },{})\r\n\r\n            return { ...state, watchlist: action.payload.watchlist, watching: watching }\r\n        }\r\n    }\r\n});\r\n\r\nexport const isSignIn = state => state.user.googleId ? true : false\r\nexport const selectUser = state => state.user\r\nexport const selectWatchlist = state => state.user.watchlist\r\nexport const selectWatching = state => state.user.watching\r\n\r\n\r\nexport const {\r\n    login,\r\n    logout,\r\n    addToWatching,\r\n    addToWatchlist,\r\n    removeFromWatchlist,\r\n    refreshWatchlist\r\n} = userSlice.actions\r\n\r\nexport default userSlice.reducer","import React, { useState, useEffect } from 'react';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({ pageLimit, totalRecords, onPageChanged }) => {\r\n    const totalPages = Math.ceil(totalRecords / pageLimit);\r\n    const [state, setState] = useState({ currentPage: 1, previousPage: 1 })\r\n\r\n    const calculateNextState = (prevState, newCurrent) => {\r\n        return {\r\n            currentPage: newCurrent,\r\n            previousPage: prevState.currentPage\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handlePageChanged(state.currentPage, state.previousPage)\r\n    }, [state])\r\n\r\n    const handlePageChanged = (currentPage, previousPage) => {\r\n        if (currentPage !== previousPage)\r\n            onPageChanged(currentPage, (currentPage - 1) * pageLimit, (currentPage - 1) * pageLimit + pageLimit - 1)\r\n    }\r\n\r\n    const onNextPage = () => {\r\n        setState(prevState => {\r\n            const newCurrent = prevState.currentPage !== totalPages ? prevState.currentPage + 1 : prevState.currentPage\r\n            return calculateNextState(prevState, newCurrent)\r\n        })\r\n    }\r\n\r\n    const onPreviousPage = () => {\r\n        setState(prevState => {\r\n            const newCurrent = prevState.currentPage !== 1 ? prevState.currentPage - 1 : prevState.currentPage\r\n            return calculateNextState(prevState, newCurrent)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <NavigateBeforeIcon onClick={onPreviousPage} />\r\n            <span>{state.currentPage} - {totalPages}</span>\r\n            <NavigateNextIcon onClick={onNextPage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React, { useState, useEffect } from 'react';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport './paginatedContainer.css';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst PaginatedContainer = ({ pageLimit, items = []}) => {\r\n\r\n    const getDisplayedContent = () => {\r\n        return items.slice(0, pageLimit)\r\n    }\r\n\r\n    const [displayedContent, setDisplayedContent] = useState(getDisplayedContent())\r\n\r\n    useEffect(() => {\r\n        setDisplayedContent(getDisplayedContent())\r\n    }, [items])\r\n\r\n    const handlePageChange = (currentPage, from, to) => {\r\n        setDisplayedContent(items.slice(from, to + 1))\r\n    }\r\n    \r\n    const renderItems = () => {\r\n        if (items.length) {\r\n            return (\r\n                <div className=\"paginated_container\">\r\n                    <div className=\"paginated_container__items\">\r\n                        {displayedContent && displayedContent.map((item, index) => <div key={index} className=\"paginated_container__item\">{item}</div>)}\r\n                        {displayedContent.length === 0 ? <div className=\"paginated_container__err\">Aun no has marcado animes como visto</div> : null}\r\n                    </div>\r\n                    <div className=\"paginated_container__pagination\">\r\n                        {displayedContent.length > 0 ? <Pagination pageLimit={pageLimit} totalRecords={items.length} onPageChanged={handlePageChange} /> : null}\r\n                    </div>\r\n                </div >\r\n            )\r\n        } else {\r\n            return <div className=\"episode-list-loader\"><Loader type=\"Puff\" color=\"#ffa800\" height={100} width={100} /></div>\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        renderItems()\r\n    )\r\n}\r\n\r\nexport default PaginatedContainer\r\n","import React from 'react';\r\n\r\nconst ActionButton = ({action, icon, text}) => {\r\n\r\n    const renderButton = () => {\r\n        return <div className=\"action-button\" onClick={() => action()}>{icon} <span>{text}</span></div>\r\n    }\r\n\r\n    return (\r\n        renderButton()\r\n    )\r\n}\r\n\r\nexport default ActionButton\r\n","import React from 'react';\r\nimport './AnimeCard.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport ActionButton from '../ActionButton/ActionButton';\r\nimport {\r\n    addWatchlist,\r\n    selectWatchlist,\r\n    removeWatchlist,\r\n    isSignIn\r\n}\r\nfrom '../../Redux/userSlice';\r\n\r\nconst AnimeCard = ({ title, poster, url, episode = null, nextEpisodeDate, type, fn }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const watchlist = useSelector(selectWatchlist)\r\n    const signedIn = useSelector(isSignIn)\r\n\r\n    const toEpisode = () => {\r\n        if(nextEpisodeDate)\r\n            return <span>{nextEpisodeDate}</span>\r\n        else\r\n            if(episode)\r\n            return <span>Episodio {episode}</span>\r\n    }\r\n    \r\n    const renderRemoveButton = () => {\r\n        if( type === 'watchlist')\r\n            return <CancelIcon onClick={() => fn()} />\r\n    }\r\n\r\n    const animeInfo = {\r\n        animeId: url,\r\n        poster: poster,\r\n        title: title\r\n    }\r\n\r\n    const watchlistButton = () => {\r\n        if(watchlist.find( e => e.animeId === url))\r\n            return <ActionButton icon={<BookmarkIcon />} text=\"Watchlist\" action={() => dispatch(removeWatchlist({animeId: url}))} />\r\n        else\r\n            return <ActionButton icon={<BookmarkBorderIcon />} text=\"Watchlist\" action={() => dispatch(addWatchlist(animeInfo))} />\r\n    }\r\n\r\n    const renderWatchlist = () => {\r\n        if(type === 'search' && signedIn)\r\n            return (\r\n            <div className=\"card-watchlist\">\r\n                    {watchlistButton()}\r\n            </div>\r\n            )\r\n        else\r\n            return null\r\n    }\r\n\r\n    const renderUrl = () => {\r\n        if(nextEpisodeDate)\r\n            return '#'\r\n        if(type === 'watch')\r\n            return `/watch/${url}`\r\n        else\r\n            return `/anime/${url}`\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" key={url}>\r\n            {renderRemoveButton()}\r\n            {renderWatchlist()}\r\n            <Link to={renderUrl()}>\r\n                <img src={poster} alt={title}/>\r\n                <div className=\"card-title\">\r\n                    <p>{title}</p>\r\n                    {toEpisode()}\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnimeCard\r\n","export default __webpack_public_path__ + \"static/media/logo.292e18a7.png\";","import React, { useEffect, useState } from 'react';\nimport './Home.css';\nimport { useSelector } from 'react-redux';\nimport { selectUser, isSignIn } from '../../Redux/userSlice';\nimport { getContinueWatchingList } from '../../userAPI';\nimport PaginatedContainer from '../PaginatedContainer/PaginatedContainer';\nimport AnimeCard from '../AnimeCard/AnimeCard';\nimport logo from '../../images/logo.png';\n\nconst Home = () => {\n\n  const user = useSelector(selectUser)\n  const signedIn = useSelector(isSignIn)\n  const [animes, setAnimes] = useState([])\n\n  const getWatching = async () => {\n      const response = await getContinueWatchingList(user.googleId)\n      setAnimes(response)\n  }\n\n  useEffect(() => {\n    if(user.googleId)\n      getWatching()\n    else\n      setAnimes([])\n  },[user.googleId])\n\n  const toCard = () =>{\n      if(animes.length)\n        return animes.map( anime => {\n            return <AnimeCard\n                      key={anime.animeId}\n                      nextEpisodeDate={anime.nextEpisodeDate}\n                      episode={anime.nextEpisode}\n                      title={anime.title}\n                      poster={anime.poster}\n                      url={`${anime.animeId}/${anime.nextEpisode}`}\n                      type={'watch'}\n                    />\n        } )        \n  }\n\n  const renderContent = () => {\n    if(signedIn) {\n        return (\n          <div className=\"home\">\n              <PaginatedContainer key={animes.length} items={toCard()} pageLimit={12} />\n          </div>\n        )\n    }\n    else\n        return(\n          <div className=\"home-signed-out\">\n            <img src={logo} alt=\"Animoo Logo\" />\n            <p>Inicia sesión para empezar a agregar contenido a tu lista de seguimiento.</p>\n          </div>    \n        )\n  }\n\n  return renderContent()\n}\n\nexport default Home\n","import axios from 'axios';\r\n\r\nexport const animeAPI = axios.create({\r\n    baseURL: 'https://animootv.herokuapp.com'\r\n})\r\n\r\nexport const getAnimeVideo = anime => {\r\n    return animeAPI.get(`/anime/${anime.title}/${anime.episode}`)\r\n        .then(response => {\r\n            return { episodesCount: response.data.episodes, videos: response.data.videos.filter(e => e.option !== 'Nozomi') }\r\n        }, e => console.log(e))\r\n}\r\n\r\nexport const searchAnime = queryParams => {\r\n    return animeAPI.get('/animes', { params: { search: queryParams.q, page: queryParams.page } })\r\n        .then(response => {\r\n            return response.data\r\n        }, e => console.log(e))\r\n}\r\n\r\nexport const getEpisodeList = title => {\r\n    return animeAPI.get(`/anime/${title}`)\r\n        .then(response => {\r\n            return response.data\r\n        }, e => console.log(e))\r\n}\r\n\r\nexport const getAnimeTitles = title => {\r\n    return axios.get(`https://kitsu.io/api/edge/anime?filter[text]=${title}&fields[anime]=titles`)\r\n                    .then( response => {\r\n                        return response.data.data.map(e => e.attributes.titles.en_jp)\r\n                    })\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport './paginatedContainer.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst LazyPaginatedContainer = ({ getContent, renderItem }) => {\r\n\r\n    const [state, setState] = useState({ page: 1, items: {} })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onNextPage = () => onPageChange(state.page + 1)\r\n\r\n    const onPreviousPage = () => {\r\n        const nextPage = state.page > 1 ? state.page - 1 : state.page\r\n        onPageChange(nextPage)\r\n    }\r\n\r\n    const onPageChange = async newPage => {\r\n        if (state.items[newPage]) {\r\n            setState({ ...state, page: newPage })\r\n        }\r\n        else {\r\n            setLoading(true)\r\n            const newItems = await getContent(newPage)\r\n            setLoading(false)\r\n            if (newItems && newItems.length)\r\n                setState({\r\n                    ...state,\r\n                    page: newPage,\r\n                    items: { ...state.items, [newPage]: newItems }\r\n                })\r\n        }\r\n    }\r\n\r\n    useEffect(() => onPageChange(1), [])\r\n\r\n    const renderItems = () => {\r\n        if (state.items[state.page]) {\r\n            return state.items[state.page].map(e => renderItem(e))\r\n        } else {\r\n            return (\r\n            <div className=\"episode-list-loader\">\r\n                <Loader type=\"Puff\" color=\"#ffa800\" height={100} width={100} timeout={2000} />\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const onClick = (fn) => {\r\n        if(loading)\r\n            return null\r\n        else\r\n            return fn()\r\n    }\r\n\r\n    const renderButtons = () => {\r\n        if(state.items[state.page])\r\n            return (\r\n            <div className=\"paginated_container__pagination\">\r\n                <button onClick={() => onClick(onPreviousPage)}><NavigateBeforeIcon />prev</button>\r\n                <button onClick={() => onClick(onNextPage)}>next <NavigateNextIcon /></button>\r\n            </div>\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className=\"paginated_container\">\r\n            <div className=\"paginated_container__items\">\r\n                {renderItems()}\r\n            </div>\r\n            {renderButtons()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LazyPaginatedContainer\r\n","import React from 'react';\r\nimport { searchAnime } from '../../animeAPI';\r\nimport qs from 'qs'\r\nimport AnimeCard from '../AnimeCard/AnimeCard';\r\nimport './SearchResults.css';\r\nimport LazyPaginatedContainer from '../LazyPaginatedContainer/LazyPaginatedContainer';\r\n\r\nconst SearchResults = (props) => {\r\n\r\n    const searchAnimes = (page = 1) => {\r\n        const query = { ...qs.parse(props.location.search, { ignoreQueryPrefix: true }), page }\r\n        return searchAnime(query)\r\n    }\r\n\r\n    const toCard = anime => <AnimeCard key={anime.id} poster={anime.poster} title={anime.title} url={anime.id} type={'search'} />\r\n\r\n    return (\r\n        <div className=\"search-results\">\r\n            <LazyPaginatedContainer key={props.location.search} getContent={(pageNum) => searchAnimes(pageNum)} renderItem={toCard} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults","import React, { useState, useEffect } from 'react';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport './PaginatedList.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport ActionButton from '../ActionButton/ActionButton';\r\n\r\nconst PaginatedList = ({ tabs }) => {\r\n\r\n    const pageLimit = 10\r\n\r\n    const getDefaultState = () => {\r\n        return Object.entries(tabs).find(([k, i]) => i.default)[0]\r\n    }\r\n\r\n    const [flip, setFlip] = useState(true)\r\n    const [tab, setTab] = useState(getDefaultState)\r\n\r\n    const getDisplayedContent = () => {\r\n        if (flip)\r\n            return tabs[tab ? tab : getDefaultState()].items.reverse().slice(0, pageLimit)\r\n        return tabs[tab ? tab : getDefaultState()].items.slice(0, pageLimit)\r\n    }\r\n\r\n    const [displayedContent, setDisplayedContent] = useState(getDisplayedContent())\r\n\r\n    useEffect(() => {\r\n        setDisplayedContent(getDisplayedContent())\r\n    }, [tabs, flip])\r\n\r\n    const handlePageChange = (currentPage, from, to) => {\r\n        setDisplayedContent(tabs[tab].items.slice(from, to + 1))\r\n    }\r\n\r\n    const renderTabs = () => {\r\n        return Object.entries(tabs).map(([k, i]) => <span key={k} className={k === tab ? 'activeTab' : ''} onClick={() => setTab(k)}>{i.tab}</span>)\r\n    }\r\n\r\n    const renderList = () => {\r\n        if (displayedContent.length > 0) {\r\n            return displayedContent.map((m, i) => {\r\n                return (\r\n                    <div key={`${tab}:${m.id}`} className={`movielist__item ${i % 2 === 0 ? 'even' : 'odd'}`}>\r\n                        <Link to={m.url}><p>{m.title}</p></Link>\r\n                        <div className=\"movielist__actions\">\r\n                            {m.actions.map( a => <ActionButton action={a.action} icon={a.icon} />)}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        else\r\n            return <div className=\"movielist__empty\">No se han encontrado episodios para este anime.</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"movielist\">\r\n            <div className=\"movielist__header\">\r\n                <div className=\"movielist__tabs\">\r\n                    {renderTabs()}\r\n                </div>\r\n                <div className=\"movielist__pagination\">\r\n                    <ImportExportIcon onClick={prevState => setFlip(prevState)} />\r\n                    <Pagination key={tab} pageLimit={pageLimit} totalRecords={tabs[tab].items.length} onPageChanged={handlePageChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"movielist__items\">\r\n                {renderList()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaginatedList\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getEpisodeList } from '../../animeAPI';\r\nimport './EpisodeList.css';\r\nimport PaginatedList from '../PaginatedList/PaginatedList';\r\nimport ActionButton from '../ActionButton/ActionButton';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport { addWatching,\r\n         addWatchlist,\r\n         selectWatchlist,\r\n         selectWatching,\r\n         removeWatchlist,\r\n         isSignIn\r\n} from '../../Redux/userSlice';\r\n\r\nconst EpisodeList = (props) => {\r\n    const [anime, setAnime] = useState({})\r\n    const dispatch = useDispatch()\r\n    const watchlist = useSelector(selectWatchlist)\r\n    const watching = useSelector(selectWatching)\r\n    const signedIn = useSelector(isSignIn)\r\n\r\n    const animeList = Array.from({ length: anime.episodeCount }, ((e, i) => {\r\n    \r\n        const isInWatching = () => {\r\n            if(!signedIn)\r\n                return null\r\n            if(watching[props.match.params.title] >= i + 1)\r\n                return <VisibilityOffIcon />\r\n            else\r\n                return <VisibilityIcon />\r\n        }\r\n\r\n        return {\r\n            title: e = `${anime.title} - Episodio ${i + 1}`,\r\n            id: i + 1,\r\n            url: `/watch/${props.match.params.title}/${i + 1}`,\r\n            actions: [\r\n                {\r\n                    icon: isInWatching(),\r\n                    action: () => {\r\n                        dispatch(addWatching({animeId: props.match.params.title, lastEpisode: i + 1  }))\r\n                    }\r\n                },\r\n            ]\r\n        }\r\n    }))\r\n\r\n    const getEpisodes = async () => {\r\n        const query = props.match.params.title\r\n        const response = await getEpisodeList(query)\r\n        setAnime(response)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getEpisodes()\r\n    }, [props.match.params.title]) \r\n\r\n    const episodeList = {\r\n        episodes: {\r\n            tab: anime.title,\r\n            items: animeList,\r\n            default: true\r\n        }\r\n    }\r\n\r\n    const animeInfo = {\r\n        animeId: props.match.params.title,\r\n        poster: anime.poster,\r\n        title: anime.title\r\n    }\r\n\r\n    const watchlistButton = () => {\r\n        if(watchlist.find( e => e.animeId === props.match.params.title))\r\n            return <ActionButton icon={<BookmarkIcon />} text=\"Watchlist\" action={() => dispatch(removeWatchlist({animeId: props.match.params.title}))} />\r\n        else\r\n            return <ActionButton icon={<BookmarkBorderIcon />} text=\"Watchlist\" action={() => dispatch(addWatchlist(animeInfo))} />\r\n    }\r\n\r\n    const renderWatchlist = () => {\r\n        if(signedIn)\r\n            return watchlistButton()\r\n        else\r\n            return null\r\n    }\r\n\r\n    const renderList = () => {\r\n        if (anime.poster) {\r\n            return (\r\n                <>\r\n                    <div className=\"episode-list-anime-info\">\r\n                        <div className=\"episode-list-anime-info-poster\">\r\n                            <img src={anime.poster} alt={anime.title}/>\r\n                            {renderWatchlist()}\r\n                        </div>\r\n                        <ul className=\"episode-list-anime-info-state\">\r\n                            <li>{anime.type}</li>\r\n                            <li>{anime.state}</li>\r\n                        </ul>\r\n                        <p alt={anime.overview}>{anime.overview}</p>\r\n                    </div>\r\n                    <div className=\"episode-list-pagination\">\r\n                        <PaginatedList tabs={episodeList} />\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        else\r\n            return <div className=\"episode-list-loader\"><Loader type=\"Puff\" color=\"#ffa800\" height={100} width={100} /></div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"episode-list\">\r\n            <div className=\"episode-list-anime\">\r\n                {renderList()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EpisodeList\r\n","import React, { useEffect, useState } from 'react';\r\nimport './VideoPlayer.css';\r\n\r\nconst VideoPlayer = (props) => {\r\n    const [selectedVideo, setSelectedVideo] = useState('')\r\n\r\n    const getVideos = () => {\r\n        return props.videos ? props.videos.map(v => <button className=\"video-button-item\" key={v.url} onClick={() => setSelectedVideo(v.url)}>{v.option}</button>) : null\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSelectedVideo(props.videos && props.videos[0].url)\r\n    }, [props.videos])\r\n\r\n    return (\r\n        <div className=\"video-container\">\r\n            <div className=\"video-button-list\">{getVideos()}</div>\r\n            <iframe\r\n                title=\"video player\"\r\n                src={selectedVideo}\r\n                scrolling=\"no\"\r\n                frameBorder=\"0\"\r\n                allowFullScreen={true}\r\n                controls={0}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Button.css';\r\n\r\nconst Button = ({ btn }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Link to={btn.url}><button onClick={btn.fn ? btn.fn : null} className={`btn${btn.greyed ? '-greyed' : ''}`}>{btn.label}{btn.icon}</button></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport VideoPlayer from '../VideoPlayer/VideoPlayer';\r\nimport { getAnimeVideo } from '../../animeAPI';\r\nimport './Watch.css';\r\nimport Button from '../Button/Button';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { addWatching } from '../../Redux/userSlice';\r\nimport ReorderIcon from '@material-ui/icons/Reorder';\r\n\r\nconst Watch = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [videos, setVideos] = useState([])\r\n\r\n    const previousEpisode = {\r\n        label: 'Episodio anterior',\r\n        url: props.match.params.episode > 1 ? `/watch/${props.match.params.title}/${parseInt(props.match.params.episode) - 1}` : '#',\r\n        icon: <SkipPreviousIcon style={{ order: '-1' }} />,\r\n        greyed: props.match.params.episode == 1\r\n    }\r\n\r\n    const nextEpisode = {\r\n        label: 'Episodio siguiente',\r\n        url: props.match.params.episode < videos.episodesCount ? `/watch/${props.match.params.title}/${parseInt(props.match.params.episode) + 1}` : '#',\r\n        icon: <SkipNextIcon />,\r\n        greyed: props.match.params.episode == videos.episodesCount\r\n    }\r\n\r\n    const episodeList = {\r\n        icon: <ReorderIcon />,\r\n        url: `/anime/${props.match.params.title}/`\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleVideos = async () => {\r\n            const response = await getAnimeVideo({ title: props.match.params.title, episode: props.match.params.episode })\r\n            setVideos(response)\r\n        }\r\n        handleVideos()\r\n        dispatch(addWatching({animeId: props.match.params.title, lastEpisode: props.match.params.episode }))\r\n    }, [props.match.params.episode])\r\n\r\n    const renderVideo = () => {\r\n        if (videos.videos?.length)\r\n            return (\r\n                <>\r\n                    <VideoPlayer videos={videos.videos} />\r\n                    <div className=\"watch-nav\">\r\n                        <Button btn={previousEpisode} />\r\n                        <Button btn={episodeList} />\r\n                        <Button btn={nextEpisode} />\r\n                    </div>\r\n                </>\r\n            )\r\n        else\r\n            return <Loader type=\"Puff\" color=\"#ffa800\" height={100} width={100} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"watch\">\r\n            <div className=\"watch-main\">\r\n                {renderVideo()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watch\r\n","import React, { useState } from 'react';\r\nimport './Searchbar.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst Searchbar = (props) => {\r\n    const [search, setSearch] = useState()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (props.onSearch)\r\n            props.onSearch(search)\r\n    }\r\n\r\n    return (\r\n        <div className=\"searchbar\">\r\n            <form onSubmit={e => handleSubmit(e)} >\r\n                <SearchIcon />\r\n                <input className=\"searchbar-input\" onChange={e => setSearch(e.target.value)} placeholder=\"Search...\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbar\r\n","export const googleOAuth = {\r\n    clientId: \"786275069032-32rglqn5le1p9nr8b8bptkr8q5c7f6if.apps.googleusercontent.com\",\r\n    cookiePolicy: \"single_host_origin\",\r\n}\r\n\r\nexport const getUserData = (response) => {\r\n    return {\r\n        name: response.profileObj.givenName, \r\n        googleId: response.profileObj.googleId,\r\n        avatar: response.profileObj.imageUrl\r\n    }\r\n}","import React from 'react';\r\nimport './DropDownMenu.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DropDownMenu = ({ items, active, blur }, menuRef) => {\r\n\r\n    const renderMenu = () => {\r\n        return items.map((item, index) =>\r\n            <Link\r\n                key={index}\r\n                onClick={item.action}\r\n                className=\"menu__item\"\r\n                to={`${item.path ? item.path : ''}`} >\r\n                {item.icon}<span>{item.value}</span>\r\n            </Link>\r\n        )\r\n    }\r\n\r\n    const isActive = () => {\r\n        if (active)\r\n            return '__active'\r\n        else\r\n            return ''\r\n    }\r\n\r\n    return (\r\n        <div className={`menu${isActive()}`} onBlur={blur} ref={menuRef} tabIndex={0}>\r\n            {renderMenu()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(DropDownMenu)\r\n","import React, { useEffect, useState } from 'react';\r\nimport './UserContainer.css'\r\nimport { GoogleLogin, useGoogleLogout } from 'react-google-login';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserData, googleOAuth } from '../../Login/googleOAuth';\r\nimport { login, logout, fetchUserData, isSignIn, selectUser } from '../../Redux/userSlice';\r\nimport DropDownMenu from '../DropDownMenu/DropDownMenu';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary';\r\n\r\nconst UserContainer = () => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const menuRef = React.createRef()\r\n    const signedIn = useSelector(isSignIn)\r\n    const user = useSelector(selectUser)\r\n    const dispatch = useDispatch()\r\n\r\n    const onSuccess = (response) => {\r\n        dispatch(login(getUserData(response)))\r\n        dispatch(fetchUserData(response.googleId))    \r\n    }\r\n\r\n    const onFailure = (response) => {\r\n        return console.log(response)\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        if (!e.currentTarget.contains(e.relatedTarget)) {\r\n            setOpen(false)\r\n        }\r\n    }\r\n    \r\n        const onLogoutSuccess = () => {\r\n            dispatch(logout())\r\n        }\r\n\r\n    const { signOut } = useGoogleLogout({\r\n        onFailure,\r\n        ...googleOAuth,\r\n        onLogoutSuccess\r\n    })\r\n\r\n    const logoutMenu = () => {\r\n        signOut()\r\n        setOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (menuRef.current)\r\n            menuRef.current.focus()\r\n    }, [open])\r\n\r\n    const renderGoogle = () => {\r\n        if(signedIn) {\r\n            return (\r\n            <div className=\"user-container\" onClick={() => setOpen(!open)}>\r\n                <img src={user.avatar} alt=\"avatar\" />\r\n                <p>{user.name}</p>\r\n                <div className=\"user-container-menu\">\r\n                    <DropDownMenu\r\n                        ref={menuRef}\r\n                        active={open}\r\n                        blur={handleBlur}\r\n                        items={[\r\n                            { value: 'Watching', path: '/', icon: <VideoLibraryIcon />, action: () => setOpen(false) },\r\n                            { value: 'Watchlist', path: '/watchlist', icon: <BookmarksIcon />, action: () => setOpen(false) },\r\n                            { value: 'Logout', icon: <ExitToAppIcon />, action: logoutMenu}\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else\r\n        return (\r\n            <GoogleLogin\r\n                clientId= {googleOAuth.clientId}\r\n                cookiePolicy= {googleOAuth.cookiePolicy}\r\n                buttonText= \"Login\"\r\n                onSuccess= {onSuccess}\r\n                onFailure= {onFailure}\r\n                isSignedIn={true}\r\n            />\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderGoogle()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserContainer","import React from 'react';\r\nimport './Navbar.css';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserContainer from '../UserContainer/UserContainer';\r\n\r\nconst Sidebar = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const onSubmit = (searchTerm) => {\r\n        if (searchTerm.length === 0)\r\n            return\r\n        history.push(`/search?q=${searchTerm.replace( /\\s+/g , '_')}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar-main\">\r\n            <Searchbar onSearch={onSubmit} />\r\n            <UserContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getWatchlist } from '../../userAPI';\r\nimport PaginatedContainer from '../PaginatedContainer/PaginatedContainer';\r\nimport AnimeCard from '../AnimeCard/AnimeCard';\r\nimport { removeWatchlist, selectWatchlist, selectUser, refreshWatchlist } from '../../Redux/userSlice';\r\n\r\nconst Watchlist = () => {\r\n    const dispatch = useDispatch()\r\n    const watchlist = useSelector(selectWatchlist)\r\n    const user = useSelector(selectUser)\r\n\r\n    const getUpdatedWatchlist = async () => {\r\n        const animes = await getWatchlist(user.googleId)\r\n        dispatch(refreshWatchlist(animes))\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(user.googleId)\r\n        getUpdatedWatchlist()\r\n    }, [user.googleId])\r\n\r\n    const toCard = () =>{\r\n        if(watchlist.length)\r\n          return watchlist.map( anime => {\r\n              return <AnimeCard\r\n                        key={anime.animeId}\r\n                        poster={anime.poster}\r\n                        url={anime.animeId}\r\n                        title={anime.title}\r\n                        type=\"watchlist\"\r\n                        fn={() => dispatch(removeWatchlist({animeId: anime.animeId}))}\r\n                      />\r\n          } )        \r\n    }\r\n\r\n    return <div><PaginatedContainer key={'a'} items={toCard()} pageLimit={12} /></div>\r\n}\r\n\r\nexport default Watchlist\r\n","import React from 'react';\r\nimport Home from './Components/Home/Home';\r\nimport SearchResults from './Components/SearchResults/SearchResults';\r\nimport EpisodeList from './Components/EpisodeList/EpisodeList';\r\nimport { Route, HashRouter } from 'react-router-dom';\r\nimport Watch from './Components/Watch/Watch';\r\nimport Sidebar from './Components/Navbar/Navbar';\r\nimport Watchlist from './Components/Watchlist/Watchlist';\r\nimport './App.css';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className={`app-main`}>\r\n            <div className=\"app-sec\">\r\n            <HashRouter>\r\n                <Sidebar />\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/watchlist\" exact component={Watchlist} />\r\n                <Route path=\"/search\" exact component={SearchResults} />\r\n                <Route path=\"/anime/:title\" exact component={EpisodeList} />\r\n                <Route path=\"/watch/:title/:episode\" exact component={Watch} />\r\n            </HashRouter>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from './userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});","import \"@babel/polyfill\";\nimport 'react-app-polyfill/stable';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/es/map';\nimport 'core-js/es/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n     <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}